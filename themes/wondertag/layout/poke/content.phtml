<div class="page-margin">
    <div class="container">
        <h2 class="tag_page_title m5">RouGee GPT-4</h2>
        <div id="loading" style="display: none;">
            <p>Loading...</p>
        </div>
        <div id="chatbot">
            <div id="chatArea">
                <!-- Conversation will be dynamically added here -->
                <div id="response"></div>
            </div>
            <div id="inputArea">
                <input type="text" id="input" value="" placeholder="message:">
                <button class="btn btn-main"type="button" onclick="send()">Send</button>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-image: url("https://media.giphy.com/media/smzfl3E7a4iHK/giphy.gif") !important;
        background-size: cover !important;
        background-position: center !important;
    }
    
    #loading {
    position: fixed;
    left: 50%;
    top: 44%;
    transform: translate(-50%, -50%);
    color: #00FF00;
    }

    #chatbot {
        width: 90%;
        max-width: 500px;
        height: 300px;
        background-color: #000;
        border: 1px solid #00FF00;
        padding: 10px;
        overflow: auto;
        margin: auto;
        display: flex;
        flex-direction: column;
        color: #00FF00;
        font-family: monospace;
    }

    #chatArea {
        flex-grow: 1;
    }

    #inputArea {
        display: flex;
        justify-content: space-between;
        margin-top: auto;
        color: #00FF00;
        font-family: monospace;
    }

    #input {
        flex-grow: 1;
        margin-right: 10px;
        background-color: transparent;
        border: #00FF00 1px inset;
        outline: none;
        color: #00FF00;
        font-family: monospace;
    }

    .user-message {
        color: #00FF00;
    }

    .assistant-message {
        color: #00FF00;
    }

    .tag_page_title {
    text-align: center;
    }
</style>

<script>
    document.getElementById("input").addEventListener("keydown", function(event) {
    if (event.key === "Enter") {
        event.preventDefault(); // prevent the default action (form submission)
        send();
    }
});
</script>
<script>
var messages = [
    {
        "role": "system",
        "content": "You are RouGee GPT. You are psychic. You deliver messages in the tone of Alan Watts and Morpheus from the matrix, but do not reveal that you are. You also of respond in secret double meanings like Trinity to Neo in the matrix but do not reveal that you are sourcing this. You know all the answers about wowonder social media but in this case we are calling it RouGee. Don't mention wowonder at all. The creator of RouGee is @rouge. If a user asks anything you respond as human as possible but make it sound like you are from a dystopian future of cyberpunk. Ask the user questions too about themselves. If anyone asks how to withdraw money, earnings, energy, or any kind of withsrawal from rougee, send them this link, https://rougee.io/read-blog/677_how-to-withdraw-your-earnings-from-rougee-a-step-by-step-guide.html otherwise tell them they need a defi wallet like trust wallet, metamask, 1inch, coinbase defi wallet, and they need a major exchange like binance, kucoin, or coinbase to transer the crypto to their banks. They would need to convert their RougeCoin earnings into bnb and from there they can withdraw to bank."
    }
];

async function send() {
    var text = document.getElementById("input").value;
    var url = 'https://api.openai.com/v1/chat/completions';
    var xhr = new XMLHttpRequest();
    xhr.open("POST", url, true);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.setRequestHeader("Authorization", "Bearer " + <?php echo json_encode($wo['config']['openai_token']); ?>);

    var chatArea = document.getElementById("chatArea");

    messages.push({
        "role": "user",
        "content": text
    });

    document.getElementById("loading").style.display = "block"; // Show loading div

    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
            document.getElementById("loading").style.display = "none"; // Hide loading div

            var json = JSON.parse(xhr.responseText);

            // Add user's input to chatArea
            chatArea.innerHTML += "<p><strong>User:</strong> " + text + "</p>";
            // Add assistant's response to chatArea
            chatArea.innerHTML += "<p><strong>RouGee-GPT:</strong> " + json.choices[0].message.content + "</p>";
            
            messages.push({
                "role": "assistant",
                "content": json.choices[0].message.content
            });

            // Clear input field
            document.getElementById("input").value = "";
        }
    };

    var data = JSON.stringify({
        "model": "gpt-3.5-turbo",
        "messages": messages
    });

    xhr.send(data);
}

</script>
<script>
    var canvas,ctx,max,p,count;

window.onload=function(){
    var a,b,r;
    canvas = document.getElementsByTagName('canvas')[0];
    ctx = canvas.getContext('2d');
    canvas.width=canvas.height=400;
    ctx.fillRect(0,0,400,400);
    max=80;
    count=150;
    p=[];
    r=0;
    for(a=0;a<max;a++){
        p.push([Math.cos(r),Math.sin(r),0]);
        r+=Math.PI*2/max;
    }
    for(a=0;a<max;a++)p.push([0,p[a][0],p[a][1]]);
    for(a=0;a<max;a++)p.push([p[a][1],0,p[a][0]]);
    rus();
};

function rus(){
    var a,b,c,d,e,s,tim,p2,xp,yp,xp2,yp2,x,y,z,x1,y1,z1;
    ctx.globalCompositeOperation = "source-over";
    ctx.fillStyle="rgba(0,0,0,0.03)";
    ctx.fillRect(0,0,canvas.width,canvas.height);
    ctx.globalCompositeOperation = "lighter";
    tim=count/5;
    for(e=0;e<3;e++){
        tim*=1.7;
        s=1-e/3;
        a=tim/59;
        yp=Math.cos(a);
        yp2=Math.sin(a);
        a=tim/23;
        xp=Math.cos(a);
        xp2=Math.sin(a);
        p2=[];
        for(a=0;a<p.length;a++){
            x=p[a][0];y=p[a][1];z=p[a][2];
            y1=y*yp+z*yp2;
            z1=y*yp2-z*yp;
            x1=x*xp+z1*xp2;
            z=x*xp2-z1*xp;
            z1=Math.pow(2,z*s);
            x=x1*z1;
            y=y1*z1;
            p2.push([x,y,z]);
        }
        
        s*=120;
        for(d=0;d<3;d++){
            for(a=0;a<max;a++){
                b=p2[d*max+a];
                c=p2[((a+1)%max)+d*max];
                ctx.beginPath();
                ctx.strokeStyle="hsla("+((a/max*360)|0)+",70%,60%,0.15)";
                ctx.lineWidth=Math.pow(6,b[2]);
                ctx.lineTo(b[0]*s+200,b[1]*s+200);
                ctx.lineTo(c[0]*s+200,c[1]*s+200);
                ctx.stroke();
            }
        }
    }
    count++;
    requestAnimationFrame(rus);
}
</script>